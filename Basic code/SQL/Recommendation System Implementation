-- Step 1: Calculate user-item interactions
CREATE TEMPORARY TABLE IF NOT EXISTS user_item_interactions AS (
    SELECT 
        user_id,
        item_id,
        COUNT(*) AS interaction_count
    FROM 
        user_interactions
    GROUP BY 
        user_id,
        item_id
);

-- Step 2: Calculate similarity between users using Jaccard similarity
SELECT 
    a.user_id AS user1,
    b.user_id AS user2,
    COUNT(*) AS common_interactions,
    COUNT(*) / (COUNT(DISTINCT a.item_id) + COUNT(DISTINCT b.item_id) - COUNT(*)) AS jaccard_similarity
FROM 
    user_item_interactions a
JOIN 
    user_item_interactions b ON a.item_id = b.item_id AND a.user_id != b.user_id
GROUP BY 
    a.user_id,
    b.user_id;

-- Step 3: Generate recommendations for a specific user
SELECT 
    r.item_id,
    COUNT(*) AS recommendation_score
FROM 
    user_item_interactions u
JOIN 
    user_item_interactions r ON u.user_id != r.user_id AND u.item_id = r.item_id
WHERE 
    u.user_id = 'target_user_id'
GROUP BY 
    r.item_id
ORDER BY 
    recommendation_score DESC
LIMIT 
    10;
